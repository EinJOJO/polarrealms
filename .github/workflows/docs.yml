name: Build documentation

on:
  workflow_dispatch:


permissions:
  contents: read
  id-token: write

env:
  INSTANCE: 'Writerside/p'
  DOCKER_VERSION: '2025.04.8412'
  # IS_GROUP: 'true'  # Uncomment to build a group

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      algolia_artifact: ${{ steps.define-ids.outputs.algolia_artifact }}
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          path: ${{ github.sha }}
          fetch-depth: 0
      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          # Print the values
          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"
          echo "ALGOLIA_ARTIFACT: $ALGOLIA_ARTIFACT"

          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}
      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
            artifacts/${{ steps.define-ids.outputs.algolia_artifact }}
          retention-days: 1
  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: artifacts
      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}
  deploy:
    needs: [ build, test ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      deployments: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: artifacts
      - name: Unzip artifact
        run: unzip -O UTF-8 -qq "artifacts/${{ needs.build.outputs.artifact }}" -d dir
      - name: Deploy to Production (main branch)
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dir --project-name=wandoria-polarrealms
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy Preview (pull request)
        if: github.event_name == 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dir --project-name=wandoria-polarrealms --branch=${{ github.head_ref }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}